<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[星尘的Blog]]></title>
  <link href="http://blog.konglh.com/atom.xml" rel="self"/>
  <link href="http://blog.konglh.com/"/>
  <updated>2012-10-19T02:51:12+08:00</updated>
  <id>http://blog.konglh.com/</id>
  <author>
    <name><![CDATA[星尘]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[羽毛球基础知识]]></title>
    <link href="http://blog.konglh.com/blog/2012/09/28/yu-mao-qiu-ji-chu-zhi-shi/"/>
    <updated>2012-09-28T00:55:00+08:00</updated>
    <id>http://blog.konglh.com/blog/2012/09/28/yu-mao-qiu-ji-chu-zhi-shi</id>
    <content type="html"><![CDATA[<h2>简介</h2>

<p>首先强调一下，本文写得是球 Shuttlecock；不是羽毛球运动 Badminton。中文表达这两个有那么一点点郁闷。不同于羽毛球拍有海量的资料文章，关于球本身的资料比较少而且比较混乱，本文总结一下本人目前学习到的知识，多数资料来自中羽，不过由于很多资料都是看帖子的适合随手记录，出处多数木有记录，所以就不一一列举了。</p>

<p>羽毛球整体分为羽毛（毛片）和球托（球头）两大部分。制作羽毛球的标准非常严格，每一个羽毛球都有16根羽毛固定在球托部。羽毛长度必须精准到64mm-70mm。每一个球的羽毛从托面到羽毛尖的长度应一致。羽毛顶端围成圆形，直径为58mm-68mm（最佳大小±0.5mm），应用线或其他适宜材料扎牢羽毛，一般都是使用两圈线扎球。从球毛的方向往球托看，毛片应该是按逆时针方向排列。如果球的重量太大，球口直径就会做的较大；如果重量较轻，球口直径就会做的较小。</p>

<p>在制作羽毛球的过程中，羽毛的挑选最为困难。因为羽毛都是天然而成的，就难免有厚的和薄的，有往左边弯，有往右边弯的。最后挑选出来的16根羽毛要均匀，它要重量相当、体积相当、形状相当，这样做出来的球飞行才是稳定的。</p>

<!-- more -->


<h2>球速</h2>

<p>在羽毛球筒的筒盖上经常出现76、77等数字，一般会认为就是球的速度。其实这个并不代表羽毛球的速度，而是重量。是欧洲所用的一个重量单位“格林”－英文“Grains”。 羽毛球的“速度”实际上是某重量的球在飞行时的一种形态的描述。每“格林”相当于0.065克，因为“格林”用来描述球更精确，所以IBF一般常用76，77，78来描述球的重量。</p>

<p>羽毛球的重量轻则球速慢，反之重量重则球速快。羽毛球球体很轻，决定羽毛球的羽毛球的速度快慢首先取决于羽毛球的重量；其次，气温的高低、空气的温度大小以及打球地点的海拔高度，对其重量都有较大的影响。一般夏季气温高、湿度大，或高海拔都要选择重量较轻的羽毛球。冬季气温低、气候干燥、湿度小，或低海拔就要选择重量较重的羽毛球。</p>

<p>羽毛球重量选择与气温关系的对照</p>

<table>
<thead>
<tr>
<th align="center">速度编号   </th>
<th align="center">    重量           </th>
<th align="center">   适应温度  </th>
<th align="center">   说明</th>
</tr>
</thead>
<tbody>
<tr>
<td align="center">75 (No.1)  </td>
<td align="center">  4.80 ± 0.05 g    </td>
<td align="center">    > 33℃    </td>
<td align="center"> </td>
</tr>
<tr>
<td align="center">76 (No.2)  </td>
<td align="center">  4.90 ± 0.05 g    </td>
<td align="center">  27 ~ 33℃   </td>
<td align="center"> </td>
</tr>
<tr>
<td align="center">77 (No.3)  </td>
<td align="center">  5.00 ± 0.05 g    </td>
<td align="center">  22 ~ 28℃   </td>
<td align="center"> </td>
</tr>
<tr>
<td align="center">78 (No.4)  </td>
<td align="center">  5.10 ± 0.05 g    </td>
<td align="center">  17 ~ 23℃   </td>
<td align="center"> </td>
</tr>
<tr>
<td align="center">79 (No.5)  </td>
<td align="center">  5.20 ± 0.05 g    </td>
<td align="center">  12 ~ 18℃   </td>
<td align="center"> </td>
</tr>
<tr>
<td align="center">80 (No.6)  </td>
<td align="center">  5.30 ± 0.05 g    </td>
<td align="center">   7 ~ 13℃   </td>
<td align="center"> </td>
</tr>
<tr>
<td align="center">81 (No.7)  </td>
<td align="center">  5.40 ± 0.05 g    </td>
<td align="center">    &lt; 7℃     </td>
<td align="center"> </td>
</tr>
</tbody>
</table>


<h2>种类</h2>

<p>目前羽毛球还是以天然羽毛为主，最主要的材料是鸭毛和鹅毛，塑料球在国内用的很少，但据说在英国目前是塑料球为主。个人觉得未来肯定是塑料球的天下，随着材料科学和制造工艺的进步，塑料球以后完全能做到既耐打飞行又好。但是目前的塑料球和羽球还有不小的差距，打起来球感差得很远，所以目前还是很不建议打塑料球，下面只讨论羽球。</p>

<ul>
<li>鹅毛球 —— 售价高，耐打</li>
<li>鸭毛球 —— 售价低，不耐打</li>
<li>塑料球 —— 是未来，耐打，但是现在的飞行惨不忍睹</li>
</ul>


<h4>概述</h4>

<p>总体而言，鹅毛球更高端一些，自然的，鹅毛球要比较贵一些，品牌羽毛球中，最便宜的鹅毛球价格和中高端鸭毛球相近。</p>

<p>下面简单的做一下对比：</p>

<ul>
<li>耐打 —— 鹅毛球杆粗毛片厚实，耐打程度总体比鸭毛球要高一个等级，鸭毛更容易断，散得快，当然这是说同等级的球(如果是拉直或者漂白的毛，耐打性一般都会下降一个数量级)。</li>
<li>飞行 —— 鹅毛球和鸭毛球都有飞行很好和很差的球，主要看用的是哪种毛，下面会展开</li>
<li>性价比 —— 鸭毛>鹅毛，应该主要是产量的原因，鸭的养殖量远大于鹅，而且现在中国流行吃嫩鸭，鸭毛的生长期会短很多。当然生长期短带来的代价就是鸭毛质量进一步下降</li>
</ul>


<h4>外观</h4>

<p>鹅毛和鸭毛外观上的区别是: 鹅毛毛叶纹路比较粗，毛梗突出成四方型，而鸭毛的毛叶比较细腻，毛梗不太突出。从羽毛的上端截面看，鹅毛的毛杆是圆的，鸭毛的毛杆是扁宽的四方型。另外，鹅毛的光泽度比较差，所以卖像上不如鸭毛。</p>

<h4>鸭毛球</h4>

<p>鸭毛分为鹚鸪鸭 樱桃鸭 豚鸭 水鸭四种毛片。</p>

<p>其中传统性的思想认为，鹚鸪鸭是最接近鹅毛的。主要是其毛片的结构接近鹅毛，多拍后不会有毛叶膨胀，速度减慢的现象。
从做球上来讲，鹚鸪鸭樱桃鸭豚鸭相比水鸭来讲，毛色比较白，毛杆比较直，做出来的球比较漂亮的，稳定性也好。而水鸭毛色黄毛杆弯，是属于低等级鸭毛，做出的球稳定性不会很好。</p>

<p>从耐打型上来讲，一般是 说 是这样依次排列的:鹚鸪鸭、樱桃鸭、豚鸭、水鸭。但从实际的检验来看（把一打球用试球机打20遍），似乎很难区分，当然这样测试可能不会是很标准。个人经验是毛片的新鲜度生长 时间（传说是毛片长完整后1个月到2个月之间是最好的，不足则嫩，超过则老而脆） 毛片的产区以及季节等才是决定耐打的主要因素。不过有一点驼背和大刀毛片（就是那些所谓的单边毛片）是最耐打的，是因为它们是鸭翅膀最边上的几根毛片，承担飞行的主要任务，其韧性和强度肯定很高;从营养学的角度看，因为他们位于翅膀末端，接受体内的营养比翎毛相对少些，导致其生长缓慢，从而增加了韧性和强度。</p>

<h4>鹅毛球</h4>

<p>待补充&#8230;</p>

<h2>羽毛</h2>

<h4>左手毛与右手毛(左毛、右毛)</h4>

<p>左毛就是左翼的羽毛，羽片的右半边比较厚；反之就是右毛。羽毛球的羽毛排列为右半边朝外。左毛球也就是右半边比较厚的球了。</p>

<p>一个简单的区分方法：拿住一个球，我们从内往外看，如果毛杆左边的宽度大于右边的宽度，我们就称为左手毛，反之，右边的宽度大于左边我们称为右手毛。（全园毛两边差不多，所以左毛右毛主要针对非全园毛，全园毛见下节）。</p>

<p>就性能而言，就性能而言，中方、大方略微差异, 主要表现在飞行和耐打度上，左手毛飞行稍微稳定些，右手毛耐打度和球感稍微好些。左手毛的转速在380左右，右手毛的在260左右。大家都知道枪炮都有膛线，为的是让炮弹子弹旋转着飞行以求稳定，一般情况下转速越高越稳定，这样大家就不难理解为什么左手毛的飞行要好于右手毛了。</p>

<p>对于小方的球，右手毛的飞行就容易出现下降的过程中走斜线的情况，所以小方里面右手毛的球很多人会认为不好。可是，球厂也不会特意分出左右手毛，否则左手毛有人买，右手毛卖给谁去啊？！所以能买到小方全左手毛的球，应该是比较超值的事情。</p>

<p><img src="http://blog.konglh.com/images/badminton/ball/right-left.jpg" title="左边是右毛，右边是左毛" alt="右毛球-左毛球" /></p>

<p>如图，左边的是右毛球，右边的是左毛球。</p>

<h4>羽毛种类</h4>

<p>鹅鸭的一边翅膀有7根大羽毛，从外往里数，最外面那一根是<strong>单边</strong>，第二根是<strong>驼背(大刀)</strong>，第三、四根是<strong>中小方</strong>，第五、六、七根是<strong>大方</strong>和<strong>全园</strong>。全圆是指毛片两边基本上完全对称，随着对称度越来越低，依次为大方，中方，大驼背。也就是说毛片我们可以大体分为两类，全圆毛片和非全圆毛片。</p>

<p>现在鹅鸭普遍的生长期是50-70天，甚至还有更短的，羽毛基本是还没达到成熟的地步。成熟的羽毛是90-120天的算是最好的。</p>

<p>大家如果有看过养鸭的，就会发现，鸭毛是从外面的翅尖第一根开始长的，单边是最早长出来的，其次是驼背、中小方，大方 全园。
同一只鸭子，单边的生长期最长，成熟度最好，由于禽类飞行主要靠这几根大毛，单边是最外面的一根，承担的飞行力最重，也是韧性最强的一根。</p>

<p>在06年前，单边基本是不做球的，因为其羽毛重量太重，16根羽毛的重量超过了2.2克，而且 弯度 弓度 扭转度 有三个方向的角度，而其他羽毛基本就是弯度 弓度两个方向的角度，所以单边要做到飞行稳定是一件非常困难的事情。</p>

<p>另外，单边的耐打性是最高的，目前市场上号称的耐打球，典型的yy的as9、李宁的A7, A+70 基本都是用单边做的，不过一般而言，单边的飞行方面要略差， 左手毛可能相对还好，右手毛经常会出现斜飘的现象。</p>

<h2>球托</h2>

<p>球托，也叫球头，主要体现在抗打形变和手感上。（RSL的低端球就以球头软而臭名昭著）常见材料有台纤、碎木、软木等。</p>

<p>台纤:</p>

<p><img src="http://blog.konglh.com/images/badminton/ball/taixian.jpg" title="台纤示意图" alt="台纤" /></p>

<p>软木:</p>

<p><img src="http://blog.konglh.com/images/badminton/ball/soft-wood.jpg" title="软木示意图" alt="软木" /></p>

<p>球头的常见种类如下:</p>

<h4>二拼(台纤+碎木)</h4>

<p>这是低端球最常见的球头，RSL7、RSL6均为此种球头。</p>

<p><img src="http://blog.konglh.com/images/badminton/ball/2-assemble.jpg" title="二拼示意图" alt="二拼" /></p>

<h4>三拼(软木+台纤+软木 或 软木+台纤+碎木, 示例为软木+台纤+软木)</h4>

<p>三拼球头是中端到高端的常见配置。
<img src="http://blog.konglh.com/images/badminton/ball/3-assemble.jpg" title="三拼示意图" alt="三拼" /></p>

<h4>全软木</h4>

<p>全软木：因为软木有纹路的，有些是整体一个软木或者是两个拼接起来的软木 行内都称作为整体软木，外面白色薄膜称之为“羊皮”（示例为 两个拼起来软木)</p>

<p>全软木多见于高端球。</p>

<p><img src="http://blog.konglh.com/images/badminton/ball/full-wood.jpg" title="全软木示意图" alt="全软木" /></p>

<h2>市场</h2>

<p>胡言乱语一通：RSL堕落了，yy买不起，victor也是飞行好坏得快还送你一颗小铅弹， 小牌子过几个月一批神球接下来就没了，一个悲催的世界。。。(另外，航空，波尔等一批国内做品牌的目前对他们不熟悉，以后补充)</p>

<p>前几天打球，一桶几个月前的RSL7,一桶现在的RSL7,尼玛完全不是一种球啊，耐打也就顶个1/3的样子。</p>

<p>现在的RSL6也堕落了，就比RSL7略好点，买了几打￥43/dozen最近的中羽神球俊贝1000-1, 初步看和RSL6的水准差不多，不过够便宜，不过估计也就这一批比较出色，打完后继续寻找新的神球。</p>

<p>实在不行就打yy as9, ln A7/A+70吧，飞行对打着玩足够了，耐打程度高，算起来比一般50-70的球性价比还要便宜了。</p>

<h2>Over</h2>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[基于 GitHub + Octopress 搭建博客系统]]></title>
    <link href="http://blog.konglh.com/blog/2012/07/23/ji-yu-github-plus-octopress-da-jian-zi-ji-de-bo-ke-xi-tong/"/>
    <updated>2012-07-23T03:19:00+08:00</updated>
    <id>http://blog.konglh.com/blog/2012/07/23/ji-yu-github-plus-octopress-da-jian-zi-ji-de-bo-ke-xi-tong</id>
    <content type="html"><![CDATA[<h2>缘起</h2>

<p>据说每一个使用<a href="http://octopress.com/" title="Octopress">Octopress</a>写博客的码农，第一篇博客必然是讨论Octopress本身，既在江湖混，咱也遵循江湖规矩。</p>

<p>使用<a href="https://pages.github.com/" title="GitHub Pages">GitHub Pages</a>和Octopress搭建自己的博客系统在近期技术圈非常的流行。用Git写Blog~~~一听就酷得没边了，再加上<a href="https://github.com/" title="GitHub">GitHub</a>和<a href="http://daringfireball.net/projects/markdown/" title="MarkDown">MarkDown</a>，绝对的码农神器。</p>

<p>加上自己之前在乱七八糟的地方都是写几篇就不玩了，最后甚至连博客帐号都忘了。。。这次痛下决心，自己老老实实整一个，即使不写了，也还在GitHub里。</p>

<!-- more -->


<h2>简介</h2>

<p>整个系统基于官方的分支，主要针对自己的习惯做了以下定制：</p>

<ul>
<li>修改Octopress使Category能完美的支持中文</li>
<li>根据Octopress的Category，加了一个类似的Tag机制</li>
<li>在sidebar加入Category列表和Tag Cloud机制</li>
<li>加入对<a href="http://www.jiathis.com/" title="加网">JiaThis</a>和<a href="http://www.duoshuo.com/" title="多说">多说</a>的支持</li>
</ul>


<h4>说明</h4>

<p>其实Category在Octopress里面本身就是传统意义上的tag机制，不过个人依然比较喜欢传统的目录机制，所以分成两个，一个用来表示目录，一个用来表示Tag。然后我写的时候每篇文章只属于一个Category，但是会有多个Tag。</p>

<p>分享和评论部分也可以使用<a href="http://www.disqus.com/" title="Disqus">Disqus</a>、<a href="http://www.duoshuo.com/" title="友言">友言</a>， 友言的好处是支持缩进式评论，缺点是在我这儿加载比较慢，ui也不太符合我的口味。另外JiaThis和Octopress的Video模块有冲突，会造成分享那儿有个小小的flash框，视觉上超级不爽。最后我直接修改js跳过了对JiaThis Object的处理</p>

<p>整个过程中参考了<a href="http://mrzhang.me">http://mrzhang.me</a>和<a href="https://github.com/tokkonopapa/octopress-tagcloud">https://github.com/tokkonopapa/octopress-tagcloud</a>的定制。</p>

<h2>安装</h2>

<h3>1. 准备</h3>

<h4>必须</h4>

<ul>
<li>一个方便使用Git, ruby, vim的系统，Linux/Mac OS X都不错，用windows的就自觉点安个虚拟机</li>
<li>注册一个<a href="https://github.com/signup/free">GitHub</a>帐号，新建一个空的Repository。如果你准备用自己的域名的话，Repository的名称可以随便取。另外，GitHub提供二级域名，如果要使用二级域名，必须把Repository取名为 你的GitHub帐号名.github.com，而且这样同时也能支持你的个人域名</li>
</ul>


<h4>可选</h4>

<ul>
<li>一个多说或者Disqus、友言的帐号，用于管理你的评论系统</li>
<li>如果想用自己的域名，把source/CNAME文件内的域名改成你的域名，并且把该域名的A Record指向IP：207.97.227.245，域名和CNAME文件的内容必须完全一致。比如我把我的域名 konglh.com指过来了，那么CNAME里面必须写konglh.com，不能写成www.konglh.com之类</li>
</ul>


<h3>2. 安装ruby</h3>

<p>参考文档：<a href="http://octopress.org/docs/setup/rvm/">http://octopress.org/docs/setup/rvm/</a></p>

<h4>为当前用户安装rvm</h4>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>bash -s stable &lt; &lt;<span class="o">(</span>curl -s https://raw.github.com/wayneeseguin/rvm/master/binscripts/rvm-installer<span class="o">)</span>
</span></code></pre></td></tr></table></div></figure>


<h4>将rvm加入你的shell环境</h4>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nb">echo</span> <span class="s1">&#39;[[ -s &quot;$HOME/.rvm/scripts/rvm&quot; ]] &amp;&amp; . &quot;$HOME/.rvm/scripts/rvm&quot; # Load RVM function&#39;</span> &gt;&gt; ~/.bash_profile
</span><span class='line'><span class="nb">source</span> ~/.bash_profile
</span></code></pre></td></tr></table></div></figure>


<h4>安装RVM</h4>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>rvm install 1.9.3 <span class="o">&amp;&amp;</span> rvm use 1.9.3  <span class="c"># Octopress required that rvm version &gt;= 1.9.2</span>
</span><span class='line'>rvm rubygems latest
</span></code></pre></td></tr></table></div></figure>


<h3>3. 安装Octopress</h3>

<p>以下的安装均基于本人定制过的分支</p>

<h4>下载Octopress</h4>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>git clone git://github.com/psaux/octopress.git -b konglh
</span><span class='line'><span class="nb">cd </span>octopress    <span class="c"># If you use RVM, You&#39;ll be asked if you trust the .rvmrc file (say yes).</span>
</span><span class='line'>ruby --version  <span class="c"># Should report Ruby 1.9.3 or 1.9.2 if you install 1.9.2</span>
</span></code></pre></td></tr></table></div></figure>


<h4>安装依赖</h4>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>gem install bundler
</span><span class='line'>bundle install
</span></code></pre></td></tr></table></div></figure>


<h4>安装默认主题</h4>

<p>目前我是直接修改的默认主题，所以安装方法一致。其实这步就是把.themes/classic/内的两个目录复制到项目根目录</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>rake install
</span></code></pre></td></tr></table></div></figure>


<p>它其实类似于下面两条命令的合体，如果你修改主题，需要了解这两个命令，如果不想改，无视这儿就好:</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>rake update_source<span class="o">[</span><span class="s1">&#39;classic&#39;</span><span class="o">]</span>
</span><span class='line'>rake update_style<span class="o">[</span><span class="s1">&#39;classic&#39;</span><span class="o">]</span>
</span></code></pre></td></tr></table></div></figure>


<h3>4. 修改个人配置</h3>

<p>所有配置项都在_config.yml文件，改成你的数据即可，所有的配置都有注释，一看就懂。</p>

<p>到现在，你已经可以在本地测试了，</p>

<h3>5. 创建文章并本地测试</h3>

<p>现在我们可以验证我们的本地系统已经能正常工作。
另外，以后我们码字时，可以先在本地起一个服务，预览无误后再部署</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>rake new_post<span class="o">[</span>‘article name’<span class="o">]</span> <span class="c"># 按照[]中的名字生成一篇新的文章，然后修改生成的文件即可</span>
</span><span class='line'>rake generate   <span class="c"># Generates posts and pages into the public directory</span>
</span><span class='line'>rake watch      <span class="c"># Watches source/ and sass/ for changes and regenerates</span>
</span><span class='line'>rake preview    <span class="c"># Watches, and mounts a webserver at http://localhost:4000</span>
</span></code></pre></td></tr></table></div></figure>


<p>其中<code>rake new_post</code>生成的文章在 soure/_posts目录下，Octopress会根据当前日期和输入的文章标题自动命名，s生成文件的路径名会显示终运行结果中。形如：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>rake new_post['test']
</span><span class='line'>mkdir -p source/_posts
</span><span class='line'>Creating new post: source/_posts/2012-07-23-test.markdown</span></code></pre></td></tr></table></div></figure>


<p>运行 <code>rake preview</code> 后，你就可以使用<a href="http://localhost:4000">http://localhost:4000</a>访问你的本地博客了。</p>

<h3>6. 连接GitHub</h3>

<p><strong>注意</strong>：如果用自己的域名，记得把source/CNAME文件内的域名改成你的域名</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>rake setup_github_pages
</span></code></pre></td></tr></table></div></figure>


<p>它会提示你输入有读写权限的Repository Url，这个在你的GitHub为Blog建立的这个Repository上可以找到。Url形如：git@github.com:[Username]/[Repository].git</p>

<h3>7. 部署</h3>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>rake generate
</span><span class='line'>rake deploy
</span></code></pre></td></tr></table></div></figure>


<p>当看到“Github Pages deploy complete”后，就表示部署大功告成。注意GitHub会过一段时间才能给你生成，所以不要急，等个几分钟再看。如果是用的自定义域名的话，第一次的时间会更久，可能会到小时级。</p>

<p><strong>Tips</strong>：Octopress提供的所有rake方法，可以运行<code>rake -T</code>查看。</p>

<h3>8. 备份</h3>

<p>既然使用了GitHub，我们的文章自然要用它管理起来，不然太浪费了。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>cd source/_posts/
</span><span class='line'>git init
</span><span class='line'>touch README.md
</span><span class='line'>git add *
</span><span class='line'>git commit -m 'first commit'
</span><span class='line'>git remote add origin git@github.com:[Username]/[Repository].git</span></code></pre></td></tr></table></div></figure>


<p>_posts目录是Octopress里文章的默认保存目录。commit即可，无需push。接下来我们创建并切换到备份分支store，名字根据你的兴趣随便取，以后我们就使用这个分支管理我们的文章，整个流程如下：</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>git checkout -b store
</span><span class='line'>git add *.markdown
</span><span class='line'>git commit -m <span class="s1">&#39;backup&#39;</span>
</span><span class='line'>git push origin store
</span></code></pre></td></tr></table></div></figure>


<h2>Over</h2>
]]></content>
  </entry>
  
</feed>
